<mini_c>			-> <translation_unit>
<translation_unit>		-> <external_dcl>
		    	 |  <translation_unit> <external_dcl>
<external_dcl>		-> <function_def>
			 |  <declaration>
<function_def>		-> <function_header> <compound_st>
<function_haeder>		-> <dcl_spec> <function_name> <formal_param>
<dcl_spec>		-> <dcl_specifiers>
<dcl_specifiers>		-> <dcl_specifier>
			 |  <dcl_specifiers> <dcl_specifier>
<dcl_specifier>		-> <type_qualifier>
		    	 |  <type_specifier>
<type_qualifier>		-> 'const'
<type_specifier>		-> 'int'
		    	 |  'void'
<function_name>		-> <ident>
<formal_param>		-> '(' <opt_formal_param> ')'
<opt_formal_param>	-> <formal_param_list>
			 |  ε
<formal_param_list>	-> <param__dcl>
			 |  <formal_param_list> ',' <param_dcl>
<param_dcl>		-> <dcl_spec> <declarator>
<compound_st>		-> '{' <opt_dcl_list> <opt_stat_list> '}'
<opt_dcl_list>		-> <declaration_list>
			 |  ε
<declaration_list>		-> <declaration>
			 |  <declaration_list> <declaration>
<declaration>		-> <dcl_spec> <init_dcl_list> ';'
<init_dcl_list>		-> <init_declarator>
			 |  <init_dcl_list ',' <init_declarator>
<init_declarator>		-> <declarator>
			 |  <declarator> '=' <number>
<declarator>		-> <ident>
			 |  <ident> '[' <opt_number> ']'
<opt_number>		-> <number>
			 |  ε
<opt_stat_list>		-> <statement_list>
			 |  ε
<statement_list>		-> <statement>
			 |  <statement_list> <statement>
<statement>		-> <compound_st>
			 |  <expression_st>
			 |  <if_st>
			 |  <while_st>
			 |  <return_st>
<expression_st>		-> <opt_expression> ';'
<opt_expression>		-> <expression>
			 |  ε
<if_st>			-> 'if' '(' <expression> ')' <statement>
			 |  'if' '(' <expression> ')' <statement> 'else' <statement>
<while_st>		-> 'while' '(' <expression> ')' <statement>
<return_st>		-> 'return' <opt_expression> ';'
<expression>		-> <assignment_exp>
<assignment_exp>		-> <logical_or_exp>
			 |  <unary_exp> '=' <assignment_exp>
			 |  <unary_exp> '+=' <assignment_exp>
			 |  <unary_exp> '-=' <assignment_exp>
			 |  <unary_exp> '*=' <assignment_exp>
			 |  <unary_exp> '/=' <assignment_exp>
			 |  <unary_exp> '%=' <assignment_exp>
<logical_or_exp>		-> <logical_and_exp>
			 |  <logical_or_exp> '||' <logical_and_exp>
<logical_and_exp>		-> <equality_exp>
			 |  <logical_and_exp> '&&' <equality_exp>
<equality_exp>		-> <relational_exp>
			 |  <equality_exp> '==' <relational_exp>
			 |  <equality_exp> '!=' <relational_exp>
<relational_exp>		-> <additive_exp>
			 |  <relational_exp> '>' <additive_exp>
			 |  <relational_exp> '<' <additive_exp>
			 |  <relational_exp> '>=' <additive_exp>
			 |  <relational_exp> '<=' <additive_exp>
<additive_exp>		-> <multiplicative_exp>
			 |  <additive_exp> '+' <multiplicative_exp>
			 |  <additive_exp> '-' <multiplicative_exp>
<multiplicative_exp>	-> <unary_exp>
			 |  <multiplicative_exp> '*' <unary_exp>
			 |  <multiplicative_exp> '/' <unary_exp>
			 |  <multiplicative_exp> '%' <unary_exp>
<unary_exp>		-> <postfix_exp>
			 |  '-' <unary_exp>
			 |  '!' <unary_exp>
			 |  '++' <unary_exp>
			 |  '--' <unary_exp>
<postfix_exp>		-> <primary_exp>
			 |  <postfix_exp> '[' <expression> ']'
			 |  <postfix_exp> '(' <opt_actual_param> ')'
			 |  <postfix_exp> '++'
			 |  <postfix_exp> '--'
<opt_actual_param> 	-> <actual_param>
			 |  ε
<actual_param>		-> <actual_param_list>
<actual_param_list>	-> <assignment_exp>
			 |  <actual_param_list> ',' <assignment_exp>
<primary_exp>		-> <ident>
			 |  <number>
			 |  '(' <expression> ')'